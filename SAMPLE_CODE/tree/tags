!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
bin_tree	l1.c	/^struct bin_tree {$/;"	s	file:
bin_tree	l2.c	/^struct bin_tree {$/;"	s	file:
data	l1.c	/^int data;$/;"	m	struct:bin_tree	file:
data	l2.c	/^int data;$/;"	m	struct:bin_tree	file:
deltree	l1.c	/^void deltree(node * tree)$/;"	f
deltree	l2.c	/^void deltree(node * tree)$/;"	f
insert	l1.c	/^void insert(node ** tree, int val)$/;"	f
insert	l2.c	/^void insert(node ** tree, int val)$/;"	f
left	l1.c	/^struct bin_tree * right, * left;$/;"	m	struct:bin_tree	typeref:struct:bin_tree::	file:
left	l2.c	/^struct bin_tree * right, * left;$/;"	m	struct:bin_tree	typeref:struct:bin_tree::	file:
main	l1.c	/^void main()$/;"	f
main	l2.c	/^void main()$/;"	f
node	l1.c	/^typedef struct bin_tree node;$/;"	t	typeref:struct:bin_tree	file:
node	l2.c	/^typedef struct bin_tree node;$/;"	t	typeref:struct:bin_tree	file:
print_inorder	l1.c	/^void print_inorder(node * tree)$/;"	f
print_inorder	l2.c	/^void print_inorder(node * tree)$/;"	f
print_postorder	l1.c	/^void print_postorder(node * tree)$/;"	f
print_postorder	l2.c	/^void print_postorder(node * tree)$/;"	f
print_preorder	l1.c	/^void print_preorder(node * tree)$/;"	f
print_preorder	l2.c	/^void print_preorder(node * tree)$/;"	f
right	l1.c	/^struct bin_tree * right, * left;$/;"	m	struct:bin_tree	typeref:struct:bin_tree::bin_tree	file:
right	l2.c	/^struct bin_tree * right, * left;$/;"	m	struct:bin_tree	typeref:struct:bin_tree::bin_tree	file:
search	l1.c	/^node* search(node ** tree, int val)$/;"	f
search	l2.c	/^node* search(node ** tree, int val)$/;"	f
